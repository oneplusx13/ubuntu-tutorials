generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/brandonubuntudev/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tutorials Tutorial[]
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  type      String   // "desktop" or "server"
  level     String   // "beginner", "intermediate", "advanced"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tutorials Tutorial[]
}

model Tutorial {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String?
  content     String?
  published   Boolean  @default(false)
  featured    Boolean  @default(false)
  categoryId  String
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  category    Category @relation(fields: [categoryId], references: [id])
  author      User     @relation(fields: [authorId], references: [id])
  codeSnippets CodeSnippet[]
}

model CodeSnippet {
  id         String   @id @default(cuid())
  title      String?
  code       String
  language   String   @default("bash")
  tutorialId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  tutorial   Tutorial @relation(fields: [tutorialId], references: [id], onDelete: Cascade)
}
